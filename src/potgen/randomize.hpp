//
// Created by eriks on 6/1/17.
//

#ifndef BRANCHEDFLOWSIM_RANDOMIZE_H
#define BRANCHEDFLOWSIM_RANDOMIZE_H

#include "potgen.hpp"

/// randomizes the phases of data in a n-dimensional grid.
/// ensures that phase(x) = phase(-x).
/// This function may start multiple threads internally.
/// \param grid Grid on which to randomize the phases.
/// \param seed Seed which to feed into the random number generator.
void randomizePhases(complex_grid& grid, std::uint64_t seed);

/// randomize \p grid on the area defined by \p index using random phases
/// generated by \p rnd.
void randomize_generic(complex_grid& grid, std::function<double()> rnd, MultiIndex index);

/// This generates a multi index to iterate over the whole grid that is compatible with
/// fft indexing, that is that is centered around zero.
MultiIndex fft_indexing(const complex_grid& grid);

#endif //BRANCHEDFLOWSIM_RANDOMIZE_H
